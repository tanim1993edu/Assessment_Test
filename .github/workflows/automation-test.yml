name: Automation Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chromium'
        type: choice
        options:
        - chromium
        - firefox
      headed:
        description: 'Run in headed mode'
        required: false
        type: boolean
        default: false

env:
  PYTHON_VERSION: '3.10'
  PLAYWRIGHT_BROWSERS_PATH: '0'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium]  # Temporarily test with just chromium
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    # Cache Playwright browsers
    - name: Cache Playwright browsers
      id: playwright-cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip list  # Debug: List installed packages

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        # Try installing the new package name first, fall back to old name if not available
        if sudo apt-get install -y libasound2t64 2>/dev/null; then
          echo "Successfully installed libasound2t64"
        else
          sudo apt-get install -y libasound2
        fi
        
        # Install other required packages
        sudo apt-get install -y \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdbus-1-3 \
          libdrm2 \
          libgbm1 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libx11-6 \
          libxcb1 \
          libxcomposite1 \
          libxdamage1 \
          libxext6 \
          libxfixes3 \
          libxrandr2 \
          xvfb \
          fonts-liberation \
          libcairo2 \
          libpango-1.0-0 \
          libpangocairo-1.0-0 \
          libx11-xcb1 \
          libxcursor1 \
          libxss1 \
          libxtst6 \
          libpangoft2-1.0-0

    - name: Install Playwright
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: |
        # Install playwright with specific version
        pip install playwright==1.38.0
        
        # Install browser with verbose output
        python -m playwright install --verbose chromium
        
        # Verify installation
        python -m playwright install --with-deps chromium
        playwright --version

    - name: Create directories
      run: |
        mkdir -p reports
        mkdir -p downloads
        mkdir -p logs
        chmod -R 777 reports downloads logs  # Ensure write permissions

    - name: Run Tests
      env:
        BROWSER: ${{ matrix.browser }}
        HEADED: false
        PYTHONPATH: ${{ github.workspace }}
        DISPLAY: ':99'
      run: |
        sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        pytest -v --html=reports/report.html --self-contained-html tests/test_end_to_end_purchase.py -s

    - name: Debug Information
      if: always()
      run: |
        echo "Listing workspace contents:"
        ls -la
        echo "Listing reports directory:"
        ls -la reports/
        echo "Listing logs directory:"
        ls -la logs/
        echo "System information:"
        uname -a
        python --version
        pip list

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ matrix.browser }}
        path: reports/
        retention-days: 30

    - name: Upload Screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: failure-screenshots-${{ matrix.browser }}
        path: |
          **/screenshots/
          **/test-results/
        retention-days: 7

    - name: Upload Downloads
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: downloads-${{ matrix.browser }}
        path: downloads/
        retention-days: 7

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ matrix.browser }}
        path: logs/
        retention-days: 7