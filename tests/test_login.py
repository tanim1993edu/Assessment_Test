"""
Test for login functionality.
"""

from __future__ import annotations

from pathlib import Path
import logging
import pytest

from automation.pages.home_page import HomePage
from automation.pages.login_page import LoginPage
from automation.utils.test_data import load_credentials


@pytest.mark.usefixtures("page")
def test_login(page, credentials_file: Path) -> None:
    """Test login functionality."""
    # Configure logging for this test
    logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(name)s: %(message)s")
    logger = logging.getLogger("LoginTest")

    # Load credentials generated by API test
    email, password = load_credentials(credentials_file)
    if not email or not password:
        pytest.skip("No credentials available. Ensure API test ran successfully.")

    # Instantiate page objects
    home = HomePage(page, logger)
    login_page = LoginPage(page, logger)

    # Navigate to home page and login
    home.navigate("https://automationexercise.com")
    page.wait_for_timeout(4000)  # Wait longer to see the home page
    
    home.go_to_login()
    page.wait_for_timeout(4000)  # Wait longer to see the login page
    
    # Show the credentials being used
    print(f"\nLogging in with email: {email}")
    login_page.login(email, password)
    
    # Add verification that we're logged in
    page.wait_for_timeout(5000)  # Wait even longer to see the logged-in state