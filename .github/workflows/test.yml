name: Automation Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
      headed:
        description: 'Run in headed mode'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
        browser: ['chromium', 'firefox']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: |
        python -m playwright install ${{ matrix.browser }}
        python -m playwright install-deps

    - name: Create directories
      run: |
        mkdir -p downloads
        mkdir -p reports
        mkdir -p logs

    - name: Run tests
      env:
        BROWSER: ${{ matrix.browser }}
        HEADED: ${{ github.event.inputs.headed || 'false' }}
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/ -v --browser=${{ matrix.browser }} --html=reports/report.html

    - name: Process test artifacts
      if: always()
      run: |
        # Create archive directory
        mkdir -p artifacts

        # Copy reports
        cp -r reports artifacts/ || true
        
        # Copy logs
        cp -r logs artifacts/ || true
        
        # Copy downloads
        cp -r downloads artifacts/ || true
        
        # Copy trace files if they exist
        cp -r test-results artifacts/ || true

        # Compress artifacts
        tar -czf test-artifacts.tar.gz artifacts/

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-artifacts-${{ matrix.browser }}
        path: |
          test-artifacts.tar.gz
          reports/
          logs/
          downloads/
          test-results/
        retention-days: 30

    - name: Upload failure artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: failure-artifacts-${{ matrix.browser }}
        path: |
          reports/screenshots/
          reports/page_source/
          logs/
        retention-days: 7

    - name: Process test results
      if: always()
      run: |
        echo "### Test Results Summary :test_tube:" >> $GITHUB_STEP_SUMMARY
        echo "Browser: ${{ matrix.browser }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat logs/pytest.log | grep -E "FAILED|PASSED|ERROR" || true
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY